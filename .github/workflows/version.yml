name: Version Management

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version increment type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      description:
        description: 'Release description'
        required: true
        type: string

jobs:
  version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up PowerShell
        uses: PowerShell/PowerShell@v1
        with:
          powershell-version: '7.3'

      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Get current version
        id: current_version
        shell: pwsh
        run: |
          $manifest = Import-PowerShellDataFile ./ProxmoxHelper.psd1
          $currentVersion = [Version]$manifest.ModuleVersion
          echo "version=$currentVersion" >> $env:GITHUB_OUTPUT

      - name: Calculate new version
        id: new_version
        shell: pwsh
        run: |
          $current = [Version]'${{ steps.current_version.outputs.version }}'
          $newVersion = switch ('${{ github.event.inputs.version_type }}') {
            'major' { [Version]::new($current.Major + 1, 0, 0) }
            'minor' { [Version]::new($current.Major, $current.Minor + 1, 0) }
            'patch' { [Version]::new($current.Major, $current.Minor, $current.Build + 1) }
          }
          echo "version=$newVersion" >> $env:GITHUB_OUTPUT

      - name: Update module version
        shell: pwsh
        run: |
          $newVersion = '${{ steps.new_version.outputs.version }}'
          $manifestPath = './ProxmoxHelper.psd1'
          Update-ModuleManifest -Path $manifestPath -ModuleVersion $newVersion

      - name: Update CHANGELOG.md
        shell: pwsh
        run: |
          $changelog = Get-Content ./CHANGELOG.md -Raw
          $newVersion = '${{ steps.new_version.outputs.version }}'
          $date = Get-Date -Format "yyyy-MM-dd"
          $description = @"
          
          ## [$newVersion] - $date
          
          ${{ github.event.inputs.description }}
          
          "@
          
          $unreleased = $changelog.IndexOf("## [Unreleased]")
          $changelog = $changelog.Substring(0, $unreleased + 17) + $description + $changelog.Substring($unreleased + 17)
          Set-Content -Path ./CHANGELOG.md -Value $changelog

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "Version bump to ${{ steps.new_version.outputs.version }}"
          title: "Release v${{ steps.new_version.outputs.version }}"
          body: |
            Automated version bump to ${{ steps.new_version.outputs.version }}
            
            ### Changes
            ${{ github.event.inputs.description }}
          branch: "release/v${{ steps.new_version.outputs.version }}"
          base: "master"
          labels: "release"
          assignees: "pdubbbbbs"
          reviewers: "pdubbbbbs"
          draft: false
