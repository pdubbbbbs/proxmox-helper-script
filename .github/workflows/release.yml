name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up PowerShell
        uses: PowerShell/PowerShell@v1
        with:
          powershell-version: '7.3'

      - name: Install dependencies
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module -Name Pester -MinimumVersion 5.0.0 -Force
          Install-Module -Name PSScriptAnalyzer -Force

      - name: Run tests
        shell: pwsh
        run: |
          ./build.ps1 -Task Test

      - name: Build module
        shell: pwsh
        run: |
          ./build.ps1 -Task Build

      - name: Create release artifact
        shell: pwsh
        run: |
          ./build.ps1 -Task Package

      - name: Get version from tag
        id: get_version
        shell: pwsh
        run: |
          $version = $env:GITHUB_REF -replace '^refs/tags/v',''
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          body: |
            Release notes for version ${{ steps.get_version.outputs.version }}
            
            Please see [CHANGELOG.md](CHANGELOG.md) for details.

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/ProxmoxHelper.zip
          asset_name: ProxmoxHelper-${{ steps.get_version.outputs.version }}.zip
          asset_content_type: application/zip

  publish:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up PowerShell
        uses: PowerShell/PowerShell@v1
        with:
          powershell-version: '7.3'

      - name: Publish to PowerShell Gallery
        shell: pwsh
        env:
          POWERSHELL_GALLERY_KEY: ${{ secrets.POWERSHELL_GALLERY_KEY }}
        run: |
          ./build.ps1 -Task Publish
